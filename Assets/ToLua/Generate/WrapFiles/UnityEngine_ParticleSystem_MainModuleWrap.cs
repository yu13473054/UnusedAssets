//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class UnityEngine_ParticleSystem_MainModuleWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(UnityEngine.ParticleSystem.MainModule), null);
		L.RegFunction("New", _CreateUnityEngine_ParticleSystem_MainModule);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("duration", get_duration, set_duration);
		L.RegVar("loop", get_loop, set_loop);
		L.RegVar("prewarm", get_prewarm, set_prewarm);
		L.RegVar("startDelay", get_startDelay, set_startDelay);
		L.RegVar("startDelayMultiplier", get_startDelayMultiplier, set_startDelayMultiplier);
		L.RegVar("startLifetime", get_startLifetime, set_startLifetime);
		L.RegVar("startLifetimeMultiplier", get_startLifetimeMultiplier, set_startLifetimeMultiplier);
		L.RegVar("startSpeed", get_startSpeed, set_startSpeed);
		L.RegVar("startSpeedMultiplier", get_startSpeedMultiplier, set_startSpeedMultiplier);
		L.RegVar("startSize3D", get_startSize3D, set_startSize3D);
		L.RegVar("startSize", get_startSize, set_startSize);
		L.RegVar("startSizeMultiplier", get_startSizeMultiplier, set_startSizeMultiplier);
		L.RegVar("startSizeX", get_startSizeX, set_startSizeX);
		L.RegVar("startSizeXMultiplier", get_startSizeXMultiplier, set_startSizeXMultiplier);
		L.RegVar("startSizeY", get_startSizeY, set_startSizeY);
		L.RegVar("startSizeYMultiplier", get_startSizeYMultiplier, set_startSizeYMultiplier);
		L.RegVar("startSizeZ", get_startSizeZ, set_startSizeZ);
		L.RegVar("startSizeZMultiplier", get_startSizeZMultiplier, set_startSizeZMultiplier);
		L.RegVar("startRotation3D", get_startRotation3D, set_startRotation3D);
		L.RegVar("startRotation", get_startRotation, set_startRotation);
		L.RegVar("startRotationMultiplier", get_startRotationMultiplier, set_startRotationMultiplier);
		L.RegVar("startRotationX", get_startRotationX, set_startRotationX);
		L.RegVar("startRotationXMultiplier", get_startRotationXMultiplier, set_startRotationXMultiplier);
		L.RegVar("startRotationY", get_startRotationY, set_startRotationY);
		L.RegVar("startRotationYMultiplier", get_startRotationYMultiplier, set_startRotationYMultiplier);
		L.RegVar("startRotationZ", get_startRotationZ, set_startRotationZ);
		L.RegVar("startRotationZMultiplier", get_startRotationZMultiplier, set_startRotationZMultiplier);
		L.RegVar("randomizeRotationDirection", get_randomizeRotationDirection, set_randomizeRotationDirection);
		L.RegVar("startColor", get_startColor, set_startColor);
		L.RegVar("gravityModifier", get_gravityModifier, set_gravityModifier);
		L.RegVar("gravityModifierMultiplier", get_gravityModifierMultiplier, set_gravityModifierMultiplier);
		L.RegVar("simulationSpace", get_simulationSpace, set_simulationSpace);
		L.RegVar("customSimulationSpace", get_customSimulationSpace, set_customSimulationSpace);
		L.RegVar("simulationSpeed", get_simulationSpeed, set_simulationSpeed);
		L.RegVar("useUnscaledTime", get_useUnscaledTime, set_useUnscaledTime);
		L.RegVar("scalingMode", get_scalingMode, set_scalingMode);
		L.RegVar("playOnAwake", get_playOnAwake, set_playOnAwake);
		L.RegVar("maxParticles", get_maxParticles, set_maxParticles);
		L.RegVar("emitterVelocityMode", get_emitterVelocityMode, set_emitterVelocityMode);
		L.RegVar("stopAction", get_stopAction, set_stopAction);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateUnityEngine_ParticleSystem_MainModule(IntPtr L)
	{
		UnityEngine.ParticleSystem.MainModule obj = new UnityEngine.ParticleSystem.MainModule();
		ToLua.PushValue(L, obj);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.duration;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool ret = obj.loop;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_prewarm(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool ret = obj.prewarm;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prewarm on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startDelay;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startDelayMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startDelayMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startDelayMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startLifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startLifetime;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startLifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startLifetimeMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startLifetimeMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startLifetimeMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startSpeed;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSpeedMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startSpeedMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSpeedMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSize3D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool ret = obj.startSize3D;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSize3D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startSize;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startSizeMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startSizeX;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startSizeXMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startSizeY;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startSizeYMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startSizeZ;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startSizeZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startSizeZMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotation3D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool ret = obj.startRotation3D;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotation3D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startRotation;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startRotationMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startRotationX;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startRotationXMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startRotationY;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startRotationYMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.startRotationZ;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startRotationZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.startRotationZMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_randomizeRotationDirection(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.randomizeRotationDirection;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index randomizeRotationDirection on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_startColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxGradient ret = obj.startColor;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gravityModifier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve ret = obj.gravityModifier;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gravityModifier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gravityModifierMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.gravityModifierMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gravityModifierMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_simulationSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemSimulationSpace ret = obj.simulationSpace;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index simulationSpace on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_customSimulationSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.Transform ret = obj.customSimulationSpace;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index customSimulationSpace on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_simulationSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float ret = obj.simulationSpeed;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index simulationSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useUnscaledTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool ret = obj.useUnscaledTime;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useUnscaledTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_scalingMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemScalingMode ret = obj.scalingMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scalingMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playOnAwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool ret = obj.playOnAwake;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playOnAwake on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_maxParticles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			int ret = obj.maxParticles;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxParticles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_emitterVelocityMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemEmitterVelocityMode ret = obj.emitterVelocityMode;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index emitterVelocityMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_stopAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemStopAction ret = obj.stopAction;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stopAction on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_duration(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.duration = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index duration on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_loop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.loop = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index loop on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_prewarm(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.prewarm = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index prewarm on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startDelay(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startDelay = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startDelay on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startDelayMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startDelayMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startDelayMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startLifetime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startLifetime = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startLifetime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startLifetimeMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startLifetimeMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startLifetimeMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startSpeed = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSpeedMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startSpeedMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSpeedMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSize3D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.startSize3D = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSize3D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startSize = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startSizeMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startSizeX = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startSizeXMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startSizeY = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startSizeYMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startSizeZ = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startSizeZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startSizeZMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startSizeZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotation3D(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.startRotation3D = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotation3D on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotation(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startRotation = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotation on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startRotationMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationX(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startRotationX = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationX on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationXMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startRotationXMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationXMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationY(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startRotationY = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationY on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationYMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startRotationYMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationYMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationZ(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.startRotationZ = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationZ on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startRotationZMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.startRotationZMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startRotationZMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_randomizeRotationDirection(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.randomizeRotationDirection = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index randomizeRotationDirection on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_startColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxGradient arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxGradient>.Check(L, 2);
			obj.startColor = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index startColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gravityModifier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystem.MinMaxCurve arg0 = StackTraits<UnityEngine.ParticleSystem.MinMaxCurve>.Check(L, 2);
			obj.gravityModifier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gravityModifier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gravityModifierMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.gravityModifierMultiplier = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index gravityModifierMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_simulationSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemSimulationSpace arg0 = (UnityEngine.ParticleSystemSimulationSpace)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystemSimulationSpace));
			obj.simulationSpace = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index simulationSpace on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_customSimulationSpace(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckObject<UnityEngine.Transform>(L, 2);
			obj.customSimulationSpace = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index customSimulationSpace on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_simulationSpeed(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.simulationSpeed = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index simulationSpeed on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useUnscaledTime(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.useUnscaledTime = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index useUnscaledTime on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_scalingMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemScalingMode arg0 = (UnityEngine.ParticleSystemScalingMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystemScalingMode));
			obj.scalingMode = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index scalingMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playOnAwake(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.playOnAwake = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index playOnAwake on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_maxParticles(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.maxParticles = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index maxParticles on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_emitterVelocityMode(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemEmitterVelocityMode arg0 = (UnityEngine.ParticleSystemEmitterVelocityMode)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystemEmitterVelocityMode));
			obj.emitterVelocityMode = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index emitterVelocityMode on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_stopAction(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			UnityEngine.ParticleSystem.MainModule obj = (UnityEngine.ParticleSystem.MainModule)o;
			UnityEngine.ParticleSystemStopAction arg0 = (UnityEngine.ParticleSystemStopAction)ToLua.CheckObject(L, 2, typeof(UnityEngine.ParticleSystemStopAction));
			obj.stopAction = arg0;
			ToLua.SetBack(L, 1, obj);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index stopAction on a nil value");
		}
	}
}

